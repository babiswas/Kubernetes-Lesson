Graphana on kubernetes
======================
Default port of graphana 

kubectl create namespace my-grafana
kubectl get namespace my-grafana

1.Persistant Volume
2.Deployment
3.Service


Persistant Volume
==================

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

 This means volumen can be mounted as Read/Write by only a single node.



 Deployment
 ==========

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc

Service
=======

apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer


kubectl apply -f grafana.yaml --namespace=my-grafana
kubectl get pvc --namespace=my-grafana -o wide
kubectl get deployments --namespace=my-grafana -o wide
kubectl get svc --namespace=my-grafana -o wide
kubectl get all --namespace=my-grafana
kubectl port-forward service/grafana 3000:3000 --namespace=my-grafana
kubectl port-forward service/grafana 3000:3000 --namespace=my-grafana
kubectl port-forward pod/grafana-58445b6986-dxrrw --namespace=my-grafana --address 0.0.0.0 3000:3000
kubectl edit deployment grafana --namespace=my-grafana
kubectl rollout history deployment grafana --namespace=my-grafana

















